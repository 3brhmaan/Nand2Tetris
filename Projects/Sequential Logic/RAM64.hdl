// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */

/*
    - i will use 8 RAM16 to implement the RAM64
    - so i wil use the Address for 2 purpose :
        1. choose wich RAM16 i will work with
        2. choose which Register inside the specified RAM16 to work with

    - from [3..5] bits in Address will be used to decide which RAM16 to work with
    - using address[3..5] with DMux 1*8 which will produce 8 1-bit load , 
    - whcih 7 of them are 0 and only one is 1
    - the 0-load will be used to kepp the value of the registers of RAM16 as it is
    - the 1-load will be used to load a specifc input in a specifc register
        [0][0][0]-[x][x][x] -> 1st RAM16
        [0][0][1]-[x][x][x] -> 2nd RAM16
        [0][1][0]-[x][x][x] -> 3rd RAM16
        [0][1][1]-[x][x][x] -> 4th RAM16
        [1][0][0]-[x][x][x] -> 5th RAM16
        [1][0][1]-[x][x][x] -> 6th RAM16
        [1][1][0]-[x][x][x] -> 7th RAM16
        [1][1][1]-[x][x][x] -> 8th RAM16

    - from [0..2] will be used to decide which Register inside the specified RAM16 
    - to work with

    - the MUX will be used to decide which register will be put on the output bins
*/

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load,sel=address[3..5],a=load0,b=load1,c=load2,d=load3,e=load4,f=load5,g=load6,h=load7);

    RAM8(in=in,load=load0,address=address[0..2],out=out0);
    RAM8(in=in,load=load1,address=address[0..2],out=out1);
    RAM8(in=in,load=load2,address=address[0..2],out=out2);
    RAM8(in=in,load=load3,address=address[0..2],out=out3);

    RAM8(in=in,load=load4,address=address[0..2],out=out4);
    RAM8(in=in,load=load5,address=address[0..2],out=out5);
    RAM8(in=in,load=load6,address=address[0..2],out=out6);
    RAM8(in=in,load=load7,address=address[0..2],out=out7);
    
    Mux8Way16(a=out0,b=out1,c=out2,d=out3,e=out4,f=out5,g=out6,h=out7,sel=address[3..5],out=out);
}